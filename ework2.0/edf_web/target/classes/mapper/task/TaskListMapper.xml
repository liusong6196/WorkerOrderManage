<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ewaytek.edf.web.modules.task.dao.TaskListMapper">
	
	<select id="listForPageByUserId" resultType="com.ewaytek.edf.web.modules.task.entity.TaskListEntity">
			SELECT
			`task_id`, 
			t.`pro_id`, 
			`task_name`, 
			`task_number`, 
			`task_startdate`, 
			`task_enddate`, 
			`task_plannedhours`, 
			`task_actualhours`, 
			(`task_plannedhours`/`task_actualhours`*100) AS task_percentage, 
			t.`remark`, 
			`task_user`,
			`task_priority`,
			`task_status`,
			(Select p.pro_number from project p where p.pro_id = t.pro_id ) AS pro_number,
			(Select s.username from sys_user s where s.user_id = t.task_user ) AS username
		FROM
			task t
		where  1=1 and  pro_id  in (SELECT pro_id FROM project WHERE user_id = #{id}) OR task_user = #{id} 
		
		ORDER BY
			task_id DESC
	</select>
	<select id="findTasks" parameterType="java.util.HashMap" resultType="com.ewaytek.edf.web.modules.task.entity.TaskListEntity">
		SELECT
			`task_id`, 
			t.`pro_id`, 
			`task_name`, 
			`task_number`, 
			`task_startdate`, 
			`task_enddate`, 
			`task_plannedhours`, 
			`task_actualhours`, 
			`task_percentage`, 
			`remark`, 
			`user_id_create`, 
			`gmt_create`, 
			`gmt_modified`,
			`task_user`,
			`task_priority`,
			`task_status`
		FROM
			task t right join project_member p on t.pro_id = p.pro_id
		WHERE
			p.user_id = #{userId} and str_to_date(t.task_enddate,'%Y-%m-%d') >= #{startDate} and str_to_date(t.task_startdate,'%Y-%m-%d')  &lt;= #{startDate} and t.task_status in
			<foreach item="state" collection="states" open="(" separator="," close=")">
				#{state}
			</foreach>
		ORDER BY
			task_id DESC
	</select>
	<insert id="save">
		INSERT INTO task (
			`pro_id`, 
			`task_name`, 
			`task_number`, 
			`task_startdate`, 
			`task_enddate`, 
			`task_plannedhours`, 
			`task_actualhours`, 
			`task_percentage`, 
			`remark`, 
			`user_id_create`, 
			`gmt_create`, 
			`gmt_modified`,
			`task_user`,
			`task_priority`,
			`task_status`
		)
		VALUES (
			#{proId}, 
			#{taskName}, 
			#{taskNumber}, 
			#{taskStartdate}, 
			#{taskEnddate}, 
			#{taskPlannedhours}, 
			#{taskActualhours}, 
			#{taskPercentage}, 
			#{remark}, 
			#{userIdCreate}, 
			#{gmtCreate}, 
			#{gmtModified},
			#{taskUser},
			#{taskPriority},
			#{taskStatus}
		)
	</insert>
	
	<select id="getObjectById" resultType="com.ewaytek.edf.web.modules.task.entity.TaskListEntity">
		SELECT
			`task_id`, 
			t.`pro_id`, 
			`task_name`, 
			`task_number`, 
			`task_startdate`, 
			`task_enddate`, 
			`task_plannedhours`, 
			`task_actualhours`, 
			`task_percentage`, 
			t.`remark`, 
			`task_user`,
			`task_priority`,
			p.`pro_name` AS proName,
			`task_status`
		FROM
			task t
		LEFT JOIN 
			project p
		ON
			t.pro_id = p.pro_id
		WHERE
			task_id = #{taskId}
	</select>
	
	<update id="update">
		UPDATE task
	 	<set>
			<if test="proId != null">`pro_id` = #{proId}, </if>
			<if test="taskName != null">`task_name` = #{taskName}, </if>
			<if test="taskNumber != null">`task_number` = #{taskNumber}, </if>
			<if test="taskStartdate != null">`task_startdate` = #{taskStartdate}, </if>
			<if test="taskEnddate != null">`task_enddate` = #{taskEnddate}, </if>
			<if test="taskPlannedhours != null">`task_plannedhours` = #{taskPlannedhours}, </if>
			<if test="taskActualhours != null">`task_actualhours` = #{taskActualhours}, </if>
			<if test="taskPercentage != null">`task_percentage` = #{taskPercentage}, </if>
			<if test="remark != null">`remark` = #{remark}, </if>
			<if test="userIdCreate != null">`user_id_create` = #{userIdCreate}, </if>
			<if test="gmtCreate != null">`gmt_create` = #{gmtCreate}, </if>
			<if test="gmtModified != null">`gmt_modified` = #{gmtModified},</if>
			<if test="taskUser != null">`task_user` = #{taskUser},</if>
			<if test="taskPriority != null">`task_priority` = #{taskPriority},</if>
			<if test="taskStatus != null">`task_status` = #{taskStatus}</if>
		</set>
		WHERE
			task_id = #{taskId}
	</update>
	
	<delete id="batchRemove">
		DELETE
		FROM
			task
		WHERE
			task_id IN
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>
    <select id="prolistForPage" resultType="com.ewaytek.edf.web.modules.pro.entity.ProjectEntity">
			SELECT
			`pro_id`, 
			`user_id`, 
			`cus_id`, 
			`pro_accountmanager`, 
			`pro_name`, 
			`pro_number`, 
			`pro_type`, 
			`pro_chargetype`, 
			`pro_startdate`, 
			`pro_enddate`, 
			`pro_status`, 
			`user_id_create`, 
			`gmt_create`, 
			`gmt_modified`
		FROM
			project
		ORDER BY
			pro_id DESC
	 </select>
	 
	 <select id="prolist" resultType="com.ewaytek.edf.web.modules.pro.entity.ProjectEntity">
			SELECT
			`pro_id`, 
			`user_id`, 
			`cus_id`, 
			`pro_accountmanager`, 
			`pro_name`, 
			`pro_number`, 
			`pro_type`, 
			`pro_chargetype`, 
			`pro_startdate`, 
			`pro_enddate`, 
			`pro_status`, 
			`user_id_create`, 
			`gmt_create`, 
			`gmt_modified`
		FROM
			project
		WHERE
			user_id = #{id}
		ORDER BY
			pro_id DESC
	 </select>
	 
	   <resultMap id="queryTaskResource" type="com.ewaytek.edf.web.modules.pro.entity.ProjectMemberUserEntity">  
        <id column="id" property="id" jdbcType="VARCHAR"/>  
        <result column="user_id" property="userId" jdbcType="VARCHAR"/>  
        <result column="username" property="username" jdbcType="VARCHAR"/>  
        <collection property="projectMemberEntities" javaType="java.util.List" ofType="com.ewaytek.edf.web.modules.pro.entity.ProjectMemberEntity">  
            <id column="m_id" property="id" jdbcType="VARCHAR" />  
            <result column="pro_id" property="proId" jdbcType="VARCHAR" />  
            <result column="user_id" property="userId" jdbcType="VARCHAR" />  
        </collection>  
    </resultMap>  
	 <select id="getTaskResource" resultMap="queryTaskResource">  
        SELECT  
          p.user_id,  
          u.username
        FROM  
          sys_user u,
          project_member p
        where 
          u.user_id = p.user_id
          and
          p.pro_id = #{proId}
    </select>  
    
    
    <select id="listStateForPage" resultType="com.ewaytek.edf.web.modules.task.entity.TaskListEntity">
		SELECT
			t.task_id,
			t.pro_id, 
			t.task_name, 
			t.task_number, 
			t.task_startdate, 
			t.task_enddate, 
			t.task_plannedhours, 
			t.task_actualhours, 
			t.task_percentage, 
			t.remark, 
			t.user_id_create, 
			t.gmt_create, 
			t.gmt_modified,
			t.task_user,
			t.task_priority,
			t.task_status,
			p.pro_number
		FROM
			task t 
			left join 
			project p
			on
			t.pro_id=p.pro_id
		WHERE
			task_status = #{status}		
			and
			task_user=#{userId}
		ORDER BY
			task_enddate
	</select>

    <select id="getProNameById" resultType="String">
			SELECT
			`pro_name`
		FROM
			project
		WHERE 
			pro_id= #{proId}
		ORDER BY
			pro_id DESC
	 </select>

	<select id="countTaskOwn"  resultType="int">
		SELECT
			 count(*) 
		FROM
		 task 
		 WHERE 
		 task_user=#{userId}
		 AND
		 task_status > 1
	</select>
	
	<select id="sumTaskDays"  resultType="Integer">
		SELECT
			DATEDIFF(max(task_enddate),min(task_startdate)) +1
		FROM
		 task 
		 WHERE 
		 task_user=#{userId}
		 AND
		 task_status >1
	</select>	 
	
	
	  <select id="listForHelper" resultType="com.ewaytek.edf.web.modules.task.entity.TaskListEntity">
		SELECT
			t.task_id,
			t.pro_id, 
			t.task_name, 
			t.task_number, 
			t.task_startdate, 
			t.task_enddate, 
			t.task_plannedhours, 
			t.task_actualhours, 
			t.task_percentage, 
			t.remark, 
			t.user_id_create, 
			t.gmt_create, 
			t.gmt_modified,
			t.task_user,
			t.task_priority,
			t.task_status,
			p.pro_name,
			p.pro_number
		FROM
			task t 
			left join 
			project p
			on
			t.pro_id=p.pro_id
		WHERE
			<if test="status==9">
			task_status in (2,3)
			</if>
			<if test="status != 9">
			task_status = #{status}
			</if>
			and
			task_user=#{userId}
		ORDER BY
			${sort}
	</select>


	<select id="listForTimesheet" parameterType="java.util.HashMap" resultType="com.ewaytek.edf.web.modules.task.entity.TaskListEntity">
		SELECT
			t.pro_id,
			t.task_id,
			t.task_user,
			p.pro_type,
			p.pro_name,
			p.pro_number,
			t.task_name,
			t.task_plannedhours,
			t.task_startdate,
			t.task_enddate
		FROM
			task t left join project p on t.pro_id=p.pro_id
		WHERE
			t.task_startdate<![CDATA[ <= ]]>#{end} and t.task_enddate<![CDATA[ >= ]]>#{start}
			and
			t.task_user=#{userId}
			and 
			t.task_status<![CDATA[ <> ]]>1
	</select>
	
	<select id="listForTimesheetResult" parameterType="java.util.HashMap" resultType="com.ewaytek.edf.web.modules.task.entity.TaskListEntity">
		SELECT
			t.pro_id,
			t.task_id,
			t.task_user,
			p.pro_type,
			p.pro_name,
			p.pro_number,
			t.task_name,
			t.task_plannedhours,
			t.task_startdate,
			t.task_enddate,
			t.task_status
		FROM
			task t left join project p on t.pro_id=p.pro_id
		WHERE
			t.task_id in
			(select distinct task_id from timesheet where ts_id=#{tsid} and user_id = #{userId})
	</select>
	
	<select id="listForTimesheetInsert" parameterType="java.util.HashMap" resultType="com.ewaytek.edf.web.modules.task.entity.TaskListEntity">
		SELECT
			t.pro_id,
			t.task_id,
			t.task_user,
			p.pro_type,
			p.pro_name,
			p.pro_number,
			t.task_name,
			t.task_plannedhours,
			t.task_startdate,
			t.task_enddate,
			t.task_status
		FROM
			task t left join project p on t.pro_id=p.pro_id
		WHERE
			t.task_id not in
			(select distinct task_id from timesheet where 	ts_id=#{tsid} and user_id = #{userId})
			and t.task_user= #{userId}
			and t.task_status != 4 
			and t.task_status != 0
	</select>

<select id="getTaskEntityById" resultType="com.ewaytek.edf.web.modules.task.entity.TaskListEntity">
		SELECT
			`task_id`, 
			`pro_id`, 
			`task_name`, 
			`task_number`, 
			`task_startdate`, 
			`task_enddate`, 
			`task_plannedhours`, 
			`task_actualhours`, 
			`task_percentage`, 
			`remark`, 
			`user_id_create`, 
			`gmt_create`, 
			`gmt_modified`,
			`task_user`,
			`task_priority`,
			`task_status`,
			getUsernameById(task_user) as task_username
		FROM
			task
		WHERE
			task_id = #{taskId}
	</select>
	
	<update id="taskUpdateForHelper">
		UPDATE task
	 	<set>
			task_actualhours= getActualhours(#{tsId},#{userId},#{taskId}),
			gmt_modified = SYSDATE()
		</set>
		WHERE
			task_user = #{userId}
			and
			task_id=#{taskId}
	</update>
	
	<select id="taskList" resultType="com.ewaytek.edf.web.modules.task.entity.TaskListEntity">
		SELECT 
			`task_name`, 
			`task_number`
		FROM
			task
		WHERE
			pro_id = #{proId}
	</select>
</mapper>